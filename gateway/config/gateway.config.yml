http:
  port: 8080 

admin:
  port: 9876
  host: localhost

apiEndpoints:
  auth:
    pathRegex: "/api/auth.*" 
    host: "*"
  user:
    pathRegex: "/api/user.*" 
    host: "*"
  product:
    pathRegex: "/api/product.*" 
    host: "*"
  cart:
    pathRegex: "/api/cart.*" 
    host: "*"  
  order:
    pathRegex: "/api/order.*" 
    host: "*"
  payment:
    pathRegex: "/api/payment.*" 
    host: "*"
  analytics:
    pathRegex: "/api/analytics.*" 
    host: "*"

serviceEndpoints:
  auth-service:
    url: ${AUTH_SERVICE_HOST}/ 
  user-service:
    url: ${USER_SERVICE_HOST}/ 
  product-service:
    url: ${PRODUCT_SERVICE_HOST}/ 
  cart-service:
    url: ${CART_SERVICE_HOST}/
  payment-service:
    url: ${PAYMENT_SERVICE_HOST}/
  order-service:
    url: ${ORDER_SERVICE_HOST}/
  analytics-service:
    url: ${ANALYTICS_SERVICE_HOST}/


policies:
  - cors
  - rate-limit
  - proxy

pipelines:
  auth-pipeline:
    apiEndpoints: [ auth ]
    policies:
      - cors:
          - action:
              origin: ${CORS_ORIGIN}
              methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
              headers: "Content-Type,Authorization"
              credentials: true
              maxAge: 86400
      - rate-limit:
          - action:
              max: 100
              windowMs: 60000
              rateLimitBy: "${req.ip}"
              message: "Too many requests from this IP, please try again later."
      - proxy:
          - action:
              serviceEndpoint: auth-service
              changeOrigin: true

  user-pipeline:
    apiEndpoints: [ user ]
    policies:
      - cors:
          - action:
              origin: ${CORS_ORIGIN}
              methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
              headers: "Content-Type,Authorization"
              credentials: true
              maxAge: 86400
      - proxy:
          - action:
              serviceEndpoint: user-service
              changeOrigin: true

  product-pipeline:
    apiEndpoints: [ product ]
    policies:
      - cors:
          - action:
              origin: ${CORS_ORIGIN}
              methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
              headers: "Content-Type,Authorization"
              credentials: true
              maxAge: 86400
      - proxy:
          - action:
              serviceEndpoint: product-service
              changeOrigin: true

  cart-pipeline:
    apiEndpoints: [ cart ]
    policies:
      - cors:
          - action:
              origin: ${CORS_ORIGIN}
              methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
              headers: "Content-Type,Authorization"
              credentials: true
              maxAge: 86400
      - proxy:
          - action:
              serviceEndpoint: cart-service
              changeOrigin: true

  order-pipeline:
    apiEndpoints: [ order ]
    policies:
      - cors:
          - action:
              origin: ${CORS_ORIGIN}
              methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
              headers: "Content-Type,Authorization"
              credentials: true
              maxAge: 86400
      - proxy:
          - action:
              serviceEndpoint: order-service
              changeOrigin: true

  payment-pipeline:
    apiEndpoints: [ payment ]
    policies:
      - cors:
          - action:
              origin: ${CORS_ORIGIN}
              methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
              headers: "Content-Type,Authorization"
              credentials: true
              maxAge: 86400
      - proxy:
          - action:
              serviceEndpoint: payment-service
              changeOrigin: true

  analytics-pipeline:
    apiEndpoints: [ analytics ]
    policies:
      - cors:
          - action:
              origin: ${CORS_ORIGIN}
              methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
              headers: "Content-Type,Authorization"
              credentials: true
              maxAge: 86400
      - proxy:
          - action:
              serviceEndpoint: analytics-service
              changeOrigin: true

  
